//스코프: 변수 or 함수가 생기는 공간 (진입할 때 생성)
//전역 스코프: 어플리케이션 실행 시 만들어지고 종료되면 사라짐
//함수 스코프: 함수에 진입하면 만들어지고 벗어나면 사라짐
//블록 스코프: 코드를 묶고 있는 공간에 진입하면 만들어지고 벗어나면 사라짐

let myName = "kim"; //전역스코프에 생성된 변수

function foo() {
  let x = 10; //foo 스코프에 생성됨

  console.log(x); //접근 가능

  //스코프는 중첩됨
  //전역 스코프 안에 함수 스코프 포함됨
  console.log(myName); //접근 가능

  bar(); //호이스팅: 스코프가 생성될때 그 스코프 안에 만들어야 할 함수나 변수를 미리 생성하고 시작함
  zoo();
  function bar() {
    //함수 정의문(선언문)은 호이스팅됨
    let y = 10;

    console.log(x); //접근 가능
    console.log(myName); // 접근 가능
  }

  const zoo = function () {
    //함수 표현식은 호이스팅되지 않음
  };

  if (x === 10) {
    let x = 100;

    console.log(x); //현재 자신이 있는 스코프에서 먼저 찾고 그 다음에 바깥에서 찾음
  }
  bar();
}

foo();
console.log(x); // 접근 불가능
